//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cursed_Market_Reborn.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cursed_Market_Reborn.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CROSSHAIR_DEFAULT_CIRCLE {
            get {
                object obj = ResourceManager.GetObject("CROSSHAIR_DEFAULT_CIRCLE", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CROSSHAIR_DEFAULT_CIRCLE_WHITE {
            get {
                object obj = ResourceManager.GetObject("CROSSHAIR_DEFAULT_CIRCLE_WHITE", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CROSSHAIR_DEFAULT_DOT_GREEN {
            get {
                object obj = ResourceManager.GetObject("CROSSHAIR_DEFAULT_DOT_GREEN", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CROSSHAIR_DEFAULT_DOT_RED {
            get {
                object obj = ResourceManager.GetObject("CROSSHAIR_DEFAULT_DOT_RED", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CROSSHAIR_DEFAULT_DOT_YELLOW {
            get {
                object obj = ResourceManager.GetObject("CROSSHAIR_DEFAULT_DOT_YELLOW", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CROSSHAIR_TACTIC_01 {
            get {
                object obj = ResourceManager.GetObject("CROSSHAIR_TACTIC_01", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CROSSHAIR_TACTIC_01_WHITE {
            get {
                object obj = ResourceManager.GetObject("CROSSHAIR_TACTIC_01_WHITE", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream ES_Applause {
            get {
                return ResourceManager.GetStream("ES_Applause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream ES_Gong {
            get {
                return ResourceManager.GetStream("ES_Gong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream ES_Nice {
            get {
                return ResourceManager.GetStream("ES_Nice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.IO.UnmanagedMemoryStream, аналогичного System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream ES_Xylophone {
            get {
                return ResourceManager.GetStream("ES_Xylophone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ICON_SMALL_AURIC {
            get {
                object obj = ResourceManager.GetObject("ICON_SMALL_AURIC", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ICON_SMALL_BLOODPOINTS {
            get {
                object obj = ResourceManager.GetObject("ICON_SMALL_BLOODPOINTS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ICON_SMALL_DISCORD_BLACK {
            get {
                object obj = ResourceManager.GetObject("ICON_SMALL_DISCORD_BLACK", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ICON_SMALL_DISCORD_WHITE {
            get {
                object obj = ResourceManager.GetObject("ICON_SMALL_DISCORD_WHITE", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ICON_SMALL_SETTINGS_BLACK {
            get {
                object obj = ResourceManager.GetObject("ICON_SMALL_SETTINGS_BLACK", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ICON_SMALL_SETTINGS_WHITE {
            get {
                object obj = ResourceManager.GetObject("ICON_SMALL_SETTINGS_WHITE", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ICON_SMALL_SHARDS {
            get {
                object obj = ResourceManager.GetObject("ICON_SMALL_SHARDS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
        /// </summary>
        internal static System.Drawing.Icon icon_tray {
            get {
                object obj = ResourceManager.GetObject("icon_tray", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap IMG_LOGO_BIG_BLACK {
            get {
                object obj = ResourceManager.GetObject("IMG_LOGO_BIG_BLACK", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap IMG_LOGO_BIG_WHITE {
            get {
                object obj = ResourceManager.GetObject("IMG_LOGO_BIG_WHITE", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Missing {
            get {
                object obj = ResourceManager.GetObject("Missing", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {&quot;playerUId&quot;:&quot;ByOlympus&quot;,&quot;selectedCamperIndex&quot;:29,&quot;selectedSlasherIndex&quot;:268435482,&quot;firstTimePlaying&quot;:false,&quot;consecutiveMatchStreak&quot;:4,&quot;hasBeenGivenKillerTutorialEndReward&quot;:true,&quot;hasBeenGivenSurvivorTutorialEndReward&quot;:true,&quot;currentSeasonTicks&quot;:637818420653283328,&quot;lastConnectedCharacterIndex&quot;:4,&quot;disconnectPenaltyTime&quot;:&quot;0001-01-01T00:00:00.000Z&quot;,&quot;lastMatchEndTime&quot;:&quot;2021-12-30T12:56:11.220Z&quot;,&quot;lastMatchStartTime&quot;:&quot;0001-01-01T00:00:00.000Z&quot;,&quot;lastKillerMatchEndTime&quot;:&quot;2021-12-28T09:53:16.646Z&quot;,&quot;lastSurvivorMatchEn [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Offline_fullProfile {
            get {
                return ResourceManager.GetString("Offline_fullProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {&quot;code&quot;:200,&quot;message&quot;:&quot;OK&quot;,&quot;data&quot;:{&quot;playerId&quot;:&quot;Cursed Market 31.05.22&quot;,&quot;comment&quot;:&quot;Please, respect other people work and don&apos;t forget to mention Cursed Market creator when sharing - Cranch&quot;,&quot;discord&quot;:&quot;https:\/\/cranchpalace.info\/discord.php&quot;,&quot;inventory&quot;:[{&quot;lastUpdateAt&quot;:1654005692,&quot;objectId&quot;:&quot;D_Head01&quot;,&quot;quantity&quot;:1},{&quot;lastUpdateAt&quot;:1654005660,&quot;objectId&quot;:&quot;D_Head01_P01&quot;,&quot;quantity&quot;:1},{&quot;lastUpdateAt&quot;:1654005590,&quot;objectId&quot;:&quot;DF_Head01_LP01&quot;,&quot;quantity&quot;:1},{&quot;lastUpdateAt&quot;:1654005622,&quot;objectId&quot;:&quot;D_Head02&quot;,&quot;quantity [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Offline_inventories {
            get {
                return ResourceManager.GetString("Offline_inventories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {&quot;progress&quot;:[{&quot;step&quot;:&quot;step1&quot;,&quot;completed&quot;:true,&quot;tutorials&quot;:[{&quot;tutorialId&quot;:&quot;survivorTutorial&quot;,&quot;completed&quot;:true,&quot;mainRewardClaimed&quot;:true}]},{&quot;step&quot;:&quot;step2&quot;,&quot;completed&quot;:true,&quot;tutorials&quot;:[{&quot;tutorialId&quot;:&quot;killerTutorial&quot;,&quot;completed&quot;:true,&quot;mainRewardClaimed&quot;:true}]},{&quot;step&quot;:&quot;step3&quot;,&quot;completed&quot;:true,&quot;tutorials&quot;:[{&quot;tutorialId&quot;:&quot;botMatchSurvivor&quot;,&quot;completed&quot;:true,&quot;mainRewardClaimed&quot;:true},{&quot;tutorialId&quot;:&quot;botMatchKiller&quot;,&quot;completed&quot;:true,&quot;mainRewardClaimed&quot;:true}]},{&quot;step&quot;:&quot;step4&quot;,&quot;completed&quot;:true,&quot;tutorials&quot;:[{&quot;tutoria [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Offline_onboarding {
            get {
                return ResourceManager.GetString("Offline_onboarding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap SL_Unknown {
            get {
                object obj = ResourceManager.GetObject("SL_Unknown", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
